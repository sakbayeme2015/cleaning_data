Converting data types

>>> import pandas as pd 
>>> tips = pd.read_csv('tips.csv') 
>>> tips.info() 
<class 'pandas.core.frame.DataFrame'>
>>> tips.columns
Index([u'total_bill', u'tip', u'sex', u'smoker', u'day', u'time', u'size'], dtype='object')
>>> tips_sex = tips.sex.astype('category') 
>>> tips_smoker = tips.smoker.astype('category') 
>>> tips_totalbill = tips.total_bill.astype('category') 
>>> print(tips_sex) 


Regular expression 
>>> import re
>>> prog = re.compile('\d{3}-\d{3}-\d{4}') 
>>> result = prog.match('775-669-5896') 
>>> print(bool(result)) 
True
>>> pattern = bool(re.match(pattern='\d{3}-\d{3}-\d{4}', string='950-569-6489')) 
>>> print(pattern) 
>>> pattern2 = bool(re.match(pattern='[A-Z-a-z-1-9\*+!@#$%^&*()]\w*', string='France-Australie-Worlcup2024')) 
>>> print(pattern2) 
>>> pattern3 = bool(re.match(pattern='\$\d*\,\d{3},\d{3}', string='$12,000,000')) 
>>> print(pattern3) 
>>> pattern3 = bool(re.match(pattern='\$\d*\,\d*,\d*', string='$12,000,000')) 


Custom functions to clean data
You'll now practice writing functions to clean data.

>>> tips = pd.read_csv('tips.csv') 
>>> tips.head() 
>>> def recode_gender(gender): 
...  if gender == 'Female': 
...   return 0
...  elif gender == 'Male': 
...   return 1
...  else: 
...   return np.nan 
... 
>>> 
>>> tips.columns
Index([u'total_bill', u'tip', u'sex', u'smoker', u'day', u'time', u'size'], dtype='object')
>>> tips['recode'] = tips.sex.apply(recode_gender) 
>>> tips.head() 
   total_bill   tip     sex smoker  day    time  size  recode
0       16.99  1.01  Female     No  Sun  Dinner     2       0
1       10.34  1.66    Male     No  Sun  Dinner     3       1
2       21.01  3.50    Male     No  Sun  Dinner     3       1
3       23.68  3.31    Male     No  Sun  Dinner     2       1
4       24.59  3.61  Female     No  Sun  Dinner     4       0
>>> 

Dropping duplicate data 

>>> import pandas as pd 
>>> import numpy as np 
>>> tracks = pd.read_csv('billboard.csv') 
>>> tracks.info() 
>>> tracks.columns

>>> df = pd.DataFrame(tracks, columns=['year', 'artist', 'track', 'time']) 
>>> df.columns
Index([u'year', u'artist', u'track', u'time'], dtype='object')
>>> df.info() 

>>> tracks_no_duplicates = df.drop_duplicates() 
>>> tracks_no_duplicates.info() 
>>> tracks_no_duplicates.head() 

Fill the missing data
>>> import pandas as pd 
>>> airquality = pd.read_csv('airquality.csv') 
>>> airquality.head() 
Ozone  Solar  Wind  Temp  Month  Day
0   41.0  190.0   7.4    67      5    1
1   36.0  118.0   8.0    72      5    2
2   12.0  149.0  12.6    74      5    3
3   18.0  313.0  11.5    62      5    4
4    NaN    NaN  14.3    56      5    5
 
>>> ozone = airquality.Ozone.mean()
>>> solar = airquality.Solar.mean() 
>>> print(ozone) 
42.12931034482759
>>> print(solar) 
185.93150684931507
>>> airquality['Ozone'] = airquality.Ozone.fillna(ozone) 
>>> airquality['Solar'] = airquality.Solar.fillna(solar) 
>>> print(airquality.head()) 
      Ozone       Solar  Wind  Temp  Month  Day
0  41.00000  190.000000   7.4    67      5    1
1  36.00000  118.000000   8.0    72      5    2
2  12.00000  149.000000  12.6    74      5    3
3  18.00000  313.000000  11.5    62      5    4
4  42.12931  185.931507  14.3    56      5    5

>>> import pandas as pd 
>>> ebola = pd.read_csv('ebola.csv') 
>>> ebola.head()
>>> ebola_1 = pd.notnull(ebola).all().all() 
>>> print(ebola_1)  
False

>>> ebola_1 = pd.notnull(ebola >= 0).all().all() 
>>> print(ebola_1) 
True

